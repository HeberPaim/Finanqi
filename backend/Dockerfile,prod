# Install necessary libraries for GD and PostgreSQL
RUN apk --update --no-cache add \
    freetype-dev \
    libjpeg-turbo-dev \
    libpng-dev \
    postgresql-dev \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install gd pdo pdo_pgsql pgsql

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer

# Set the working directory
WORKDIR /app

# Copy Composer files
COPY composer.json composer.lock ./

# Install Composer dependencies
RUN composer install --no-dev --prefer-dist

# Copy application code
COPY . .

# Stage 2: Serve the application
FROM php:8.3-fpm-alpine

# Install necessary libraries for GD and PostgreSQL
RUN apk --update --no-cache add \
    freetype-dev \
    libjpeg-turbo-dev \
    libpng-dev \
    postgresql-dev \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install gd pdo pdo_pgsql pgsql

# Set the working directory
WORKDIR /var/www

# Copy application code from build stage
COPY --from=build /app /var/www

# Expose port for production
EXPOSE 9000

# Start PHP-FPM
CMD ["php-fpm"]